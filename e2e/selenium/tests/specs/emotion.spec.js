// Generated by Selenium IDE
const { Builder, By, Key, until } = require("selenium-webdriver");
const assert = require("assert");

describe("emotion", function () {
  this.timeout(600000);
  let vars;
  beforeEach(async function () {
    vars = {};
  });
  it("head", async function () {
    //1. Should have a blue background, but not a red color
    await driver.get("http://localhost:3000/color-red?frontity_name=emotion");
    await driver.get(
      "http://localhost:3000/background-blue?frontity_name=emotion"
    );
    assert.equal(
      await driver.executeScript(
        'return window.getComputedStyle(document.querySelector("body"))["background-color"]'
      ),
      "rgb(0, 0, 255)"
    );
    assert.notEqual(
      await driver.executeScript(
        'return window.getComputedStyle(document.querySelector("body"))["color"]'
      ),
      "rgb(255, 0, 0)"
    );
    await driver.findElement(By.css('[data-test-id="toggle-button"]')).click();
    assert.notEqual(
      await driver.executeScript(
        'return window.getComputedStyle(document.querySelector("body"))["background-color"]'
      ),
      "rgb(0, 0, 255)"
    );
    await driver.findElement(By.css('[data-test-id="toggle-button"]')).click();
    assert.equal(
      await driver.executeScript(
        'return window.getComputedStyle(document.querySelector("body"))["background-color"]'
      ),
      "rgb(0, 0, 255)"
    );

    //2. Should have a red color, but not a blue background
    await driver.get(
      "http://localhost:3000/background-blue?frontity_name=emotion"
    );
    await driver.get("http://localhost:3000/color-red?frontity_name=emotion");
    assert.notEqual(
      await driver.executeScript(
        'return window.getComputedStyle(document.querySelector("body"))["background-color"]'
      ),
      "rgb(0, 0, 255)"
    );
    assert.equal(
      await driver.executeScript(
        'return window.getComputedStyle(document.querySelector("body"))["color"]'
      ),
      "rgb(255, 0, 0)"
    );
    await driver.findElement(By.css('[data-test-id="toggle-button"]')).click();
    assert.notEqual(
      await driver.executeScript(
        'return window.getComputedStyle(document.querySelector("body"))["color"]'
      ),
      "rgb(255, 0, 0)"
    );
    await driver.findElement(By.css('[data-test-id="toggle-button"]')).click();
    assert.equal(
      await driver.executeScript(
        'return window.getComputedStyle(document.querySelector("body"))["color"]'
      ),
      "rgb(255, 0, 0)"
    );

    //3. Styled should have red color
    await driver.get("http://localhost:3000/styled-css?frontity_name=emotion");
    assert.equal(
      await driver.executeScript(
        'return window.getComputedStyle(document.querySelector("[data-test-id=\'styled-div\']"))["color"]'
      ),
      "rgb(255, 0, 0)"
    );

    //4. Should toggle the color
    await driver.findElement(By.css('[data-test-id="toggle-button"]')).click();
    assert.equal(
      await driver.executeScript(
        'return window.getComputedStyle(document.querySelector("[data-test-id=\'styled-div\']"))["color"]'
      ),
      "rgb(0, 0, 255)"
    );
    await driver.findElement(By.css('[data-test-id="toggle-button"]')).click();
    assert.equal(
      await driver.executeScript(
        'return window.getComputedStyle(document.querySelector("[data-test-id=\'styled-div\']"))["color"]'
      ),
      "rgb(255, 0, 0)"
    );

    //5. Should have a class name (autoLabel)
    assert(
      await driver.executeScript(
        'return document.querySelector("[data-test-id=\'styled-div\']").className.includes("Styled")'
      )
    );

    //6. Css should have red color
    await driver.get("http://localhost:3000/styled-css?frontity_name=emotion");
    assert.equal(
      await driver.executeScript(
        'return window.getComputedStyle(document.querySelector("[data-test-id=\'css-div\']"))["color"]'
      ),
      "rgb(255, 0, 0)"
    );

    //7. Should toggle the color
    await driver.findElement(By.css('[data-test-id="toggle-button"]')).click();
    assert.equal(
      await driver.executeScript(
        'return window.getComputedStyle(document.querySelector("[data-test-id=\'css-div\']"))["color"]'
      ),
      "rgb(0, 0, 255)"
    );
    await driver.findElement(By.css('[data-test-id="toggle-button"]')).click();
    assert.equal(
      await driver.executeScript(
        'return window.getComputedStyle(document.querySelector("[data-test-id=\'css-div\']"))["color"]'
      ),
      "rgb(255, 0, 0)"
    );

    //8. Should have a class name (autoLabel)
    assert(
      await driver.executeScript(
        'return document.querySelector("[data-test-id=\'css-div\']").className.includes("CSS")'
      )
    );
  });
});
