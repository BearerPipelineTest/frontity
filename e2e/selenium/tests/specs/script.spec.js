// Generated by Selenium IDE
const { Builder, By, Key, until } = require("selenium-webdriver");
const assert = require("assert");

describe("script", function () {
  this.timeout(600000);
  let vars;
  beforeEach(async function () {
    vars = {};
  });
  it("script", async function () {
    await driver.get("http://localhost:3000/?frontity_name=script");
    //1. Should load a external script from src url
    assert.equal(
      await driver.findElement(By.id("from-src")).getAttribute("src"),
      "https://unpkg.com/moment@2.24.0/min/moment.min.js"
    );
    assert(await driver.findElement(By.id("from-src")).getAttribute("async"));

    //2. Should access code from the external script
    assert(
      await driver.executeScript("return window.moment()._isAMomentObject")
    );

    //3. Should load inline script
    assert.equal(
      await driver.findElement(By.css('[data-test-id="target"]')).getText(),
      "OFF"
    );
    await driver.findElement(By.css('[data-test-id="toggle"]')).click();
    assert.equal(
      await driver.findElement(By.css('[data-test-id="target"]')).getText(),
      "ON"
    );

    //4. Should not fail when scripts are unmounted
    await driver.findElement(By.css('[data-test-id="unmount-script"]')).click();
  });
});
